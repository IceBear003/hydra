$date
	Sun Apr 14 02:12:06 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_port $end
$var wire 1 ! full $end
$var wire 1 " reading $end
$var wire 1 # writting $end
$var wire 8 $ rd_ecc_code [7:0] $end
$var wire 11 % null_ptr [10:0] $end
$var wire 11 & free_space [10:0] $end
$var parameter 32 ' PERIOD $end
$var reg 1 ( clk $end
$var reg 11 ) rd_addr [10:0] $end
$var reg 11 * rd_ecc_addr [10:0] $end
$var reg 1 + rd_op $end
$var reg 11 , wr_ecc_addr [10:0] $end
$var reg 8 - wr_ecc_code [7:0] $end
$var reg 1 . wr_ecc_en $end
$var reg 1 / wr_op $end
$scope module sram_state_0 $end
$var wire 1 ( clk $end
$var wire 11 0 rd_addr [10:0] $end
$var wire 11 1 rd_ecc_addr [10:0] $end
$var wire 1 + rd_op $end
$var wire 1 2 rst_n $end
$var wire 11 3 wr_ecc_addr [10:0] $end
$var wire 8 4 wr_ecc_code [7:0] $end
$var wire 1 . wr_ecc_en $end
$var wire 1 / wr_op $end
$var wire 11 5 null_ptr [10:0] $end
$var reg 11 6 free_space [10:0] $end
$var reg 1 7 full $end
$var reg 3 8 rd_batch [2:0] $end
$var reg 8 9 rd_ecc_code [7:0] $end
$var reg 1 : reading $end
$var reg 3 ; wr_batch [2:0] $end
$var reg 1 < writting $end
$scope module fifo $end
$var wire 1 ( clk $end
$var wire 1 / pop_head $end
$var wire 1 + push_tail $end
$var wire 1 2 rst_n $end
$var wire 11 = tail_addr [10:0] $end
$var reg 16 > head [15:0] $end
$var reg 11 ? head_addr [10:0] $end
$var reg 8 @ head_ptr [7:0] $end
$var reg 16 A tail [15:0] $end
$var reg 8 B tail_ptr [7:0] $end
$var integer 32 C i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1010 '
$end
#0
$dumpvars
bx C
bx B
bx A
bx @
bx ?
bx >
b0 =
0<
b1 ;
0:
bx 9
b1 8
07
b11111111111 6
bx 5
b0 4
b0 3
z2
b0 1
b0 0
0/
0.
b0 -
b0 ,
0+
b0 *
b0 )
1(
b11111111111 &
bx %
bx $
0#
0"
0!
$end
#5000
0(
#10000
b10 8
b10 ;
1(
#15000
0(
#20000
x#
1<
b11111111110 &
b11111111110 6
b0 ;
b11 8
1(
1/
#25000
0(
#30000
b100 8
b1 ;
1(
0/
#35000
0(
#40000
b10 ;
b101 8
1(
#45000
0(
#50000
b110 8
b11 ;
1(
#55000
0(
#60000
b100 ;
b111 8
1(
#65000
0(
#70000
b101 ;
1(
#75000
0(
#80000
b110 ;
1(
#85000
0(
#90000
b111 ;
1(
#95000
0(
#100000
0#
0<
1(
#105000
0(
#110000
1(
#115000
0(
#120000
x#
1<
b0 ;
b11111111101 &
b11111111101 6
1(
1/
#125000
0(
#130000
x"
1:
b0 8
b11111111110 &
b11111111110 6
b1 ;
b0 A
1(
1+
0/
#135000
0(
#140000
b10 ;
b1 8
1(
0+
#145000
0(
#150000
b10 8
b11 ;
1(
#155000
0(
#160000
b100 ;
b11 8
1(
#165000
0(
#170000
b100 8
b101 ;
1(
#175000
0(
#180000
b110 ;
b101 8
1(
#185000
0(
#190000
b110 8
b111 ;
1(
#195000
0(
#200000
0#
0<
b111 8
1(
